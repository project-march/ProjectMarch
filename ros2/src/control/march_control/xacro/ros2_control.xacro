<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Defines a normal effort joint used for within a ros2_control tag. Used in the exo and for gazebo. -->
    <xacro:macro name="effort_joint"
                 params="name stop_when_outside_hard_limits:=^ msec_until_error_when_in_error_soft_limits:=^">
    <joint name="${name}">
      <command_interface name="effort"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
        <param name="stop_when_outside_hard_limits">${stop_when_outside_hard_limits}</param>
        <param name="msec_until_error_when_in_error_soft_limits">${msec_until_error_when_in_error_soft_limits}</param>
    </joint>
  </xacro:macro>

  <!-- Defines a basic position joint used for within a ros2_control tag. Used when running rviz only. -->
  <xacro:macro name="rviz_joint" params="name">
    <joint name="${name}">
      <command_interface name="position"/>
      <state_interface name="position"/>
    </joint>
  </xacro:macro>

  <xacro:macro name="march_joint"
               params="name type:=^|effort
               stop_when_outside_hard_limits:=^|true
               msec_until_error_when_in_error_soft_limits:=^|1000">
    <xacro:if value="${type == 'effort'}">
      <xacro:effort_joint name="${name}"/>
    </xacro:if>
    <xacro:if value="${type == 'rviz'}">
      <xacro:rviz_joint name="${name}"/>
    </xacro:if>
  </xacro:macro>

  <!-- You have 2 types 'effort' or 'rviz' if you do rviz you should only open rviz. -->
  <!-- Default is 'effort' because this makes easier bc gazebo control is activated through the urdf on published on the '/robot_description' -->
  <xacro:arg name="type" default='effort'/>
  <xacro:property name="type" value="$(arg type)"/>

  <!-- You have 2 types 'effort' or 'rviz' if you do rviz you should only open rviz (not gazebo!). -->
  <!-- Has no effect if type is rviz.-->
  <!-- Default is 'true' because this makes easier bc gazebo control is activated through the urdf on published on the '/robot_description' -->
  <xacro:arg name="mujoco" default="true"/>

  <ros2_control name="march" type="system">
    <hardware>
      <xacro:if value="${type == 'rviz'}">
<!--        <plugin>fake_components/GenericSystem</plugin>-->
        <!-- Switch the 'march_hardware_interface/MarchMockSystemInterface' with 'fake_components/GenericSystem' -->
        <!-- If you wish to debug and play around with RVIZ, otherwise use the mock interface for mujoco-->
        <plugin>march_hardware_interface/MarchMockSystemInterface</plugin>
      </xacro:if>
      <xacro:if value="${type == 'effort'}">
        <xacro:if value="$(arg mujoco)">
          <plugin>march_hardware_interface/MarchMujocoSystemInterface</plugin>
          <param name="robot">march7</param>
        </xacro:if>
        <xacro:unless value="$(arg mujoco)">
          <plugin>march_hardware_interface/MarchExoSystemInterface</plugin>
          <param name="robot">march7</param>
        </xacro:unless>
      </xacro:if>
    </hardware>

    <xacro:march_joint name="left_ankle" stop_when_outside_hard_limits="false" msec_until_error_when_in_error_soft_limits="0"/>
    <xacro:march_joint name="left_hip_aa" stop_when_outside_hard_limits="false"  msec_until_error_when_in_error_soft_limits="0"/>
    <xacro:march_joint name="left_hip_fe"/>
    <xacro:march_joint name="left_knee"/>
    <xacro:march_joint name="right_ankle" stop_when_outside_hard_limits="false" msec_until_error_when_in_error_soft_limits="0"/>
    <xacro:march_joint name="right_hip_aa" stop_when_outside_hard_limits="false" msec_until_error_when_in_error_soft_limits="0"/>
    <xacro:march_joint name="right_hip_fe"/>
    <xacro:march_joint name="right_knee"/>

  </ros2_control>

  <!-- These tags are only used when gazebo control is used -->
  <xacro:arg name="gazebo_control_file" default="NO FILE SPECIFIED"/>
  <gazebo>
    <plugin name="gazebo_ros2_control" filename="libgazebo_ros2_control.so">
      <robot_sim_type>gazebo_ros2_control/GazeboSystem</robot_sim_type>
      <parameters>$(arg gazebo_control_file)</parameters>
    </plugin>
  </gazebo>


</robot>
