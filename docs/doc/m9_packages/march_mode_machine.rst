
.. _march_mode_machine-label:

march_ble_ipd
==============
**Author**: Andrew Hutani, MIX

Overview
--------
This package is the implementation of the Mode Machine that is used to control the mode of the whole exo. This packages also create the class ExoMode based on the :code:`modes.json` file. 
It is a bit unconventional to have the class generated by a script, but this was done in order to centralize the possible modes in one place.

.. warning:: **If a mode is added, it also needs to be added to the transitions file, alongside its possible transitions.**
    
    This needs to be done in the :code:`exo_mode_transitions.hpp` file.
  
.. note:: The name has been changed from :code:`state_machine` to :code:`mode_machine` to avoid confusion with the current state (e.g. joint angles, stance leg, etc.) of the exo.

ROS API
-------

Nodes
^^^^^
*mode_machine_node* - Handles inputs input device node (being the RQT or BLE ipd) and checks if the mode is valid. 
If it is, it will accept the mode and publish it to the rest of the exo. If it is not, it will reject the mode and publish the current mode.

Published Topics
^^^^^^^^^^^^^^^^
* | :code:`"current_mode"` `ExoMode <https://gitlab.com/project-march/march/-/blob/main/ros2/src/shared/march_shared_msgs/msg/ExoMode.msg>`_ 
  | Contains the current mode of the exoskeleton

Service Client
^^^^^^^^^^^^^^
* | :code:`"get_exo_mode_array"` `GetExoModeArray <https://gitlab.com/project-march/march/-/blob/main/ros2/src/shared/march_shared_msgs/srv/GetExoModeArray.srv>`_ 
  | Sends requested mode to the :code:`ModeMachine` and receives possible new modes
  
