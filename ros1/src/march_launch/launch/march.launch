<launch>
<!-- General                    -->
    <arg name="configuration" default="exoskeleton" doc="Configuration on launching the 'simulation' or 'exoskeleton'."/>
    <arg name="headless" default="false" doc="Launches no GUI when true."/>

    <arg name="robot" default="march6" doc="Robot to use."/>
    <arg name="robot_description" default="$(arg robot)" doc="URDF file to use"/>
    <arg name="controller_type" default="effort_control" doc="Changes the controller used by simulation."/>
    <arg name="controller_name" default="$(arg robot)" doc="Name of the controller"/>

    <arg name="gain_scheduling" default="true" doc="Whether to use gain scheduling, which changes PID values based on executed gait."/>
    <arg name="gain_tuning" default="airgait" doc="The configuration to use for gain scheduling. Only used when 'gain_scheduling' is true."/>

<!-- Simulation only            -->
    <arg name="rviz" default="false" doc="Launches RViz."/>
    <arg name="gazebo_ui" default="false" doc="Launches the Gazebo UI."/>

    <arg name="obstacle" default="none" doc="Obstacle to load in the simulation."/>
    <arg name="fixed" default="true" doc="Fixes the exoskeleton in the world in rviz"/>
    <arg name="balance" default="false" doc="Uses the dynamic balance gaits instead of the predefined gaits."/>

<!-- Hardware                   -->
    <arg name="arduino_master" default="false" doc="Launches ros serial node to connect with arduino on master."/>
    <arg name="input_device" default="false" doc="Launches ros serial node to connect with input device."/>
    <arg name="wireless" default="false" doc="Enables wireless connection to the input device."/>
    <arg name="hardware_interface" default="true" doc="Launches the hardware interface when config is 'exoskeleton."/>
    <arg name="if_name" default="" doc="Ethernet port to use, can be found by running 'ifconfig' in the terminal.
                                        If not provided, then the value is read from the robot .yaml file."/>
    <arg name="remove_fixed_joints_from_ethercat_train" default="false"
         doc="Whether the joints that are fixed in the urdf, but do have motorcontrollers,
         are also not in the ethercat train."/>
    <arg name="enable_safety_controller" default="false" doc="Whether to enable the safety controller"/>
    <arg name="jointless" default="false"
         doc="Whether to start up the exoskeleton without joints (only pdb and camera's)"/>

<!-- Data                       -->
    <arg name="rosbag" default="true" doc="Enables rosbag record node."/>
    <arg name="bag_prefix" default="log" doc="Prefix of the bag file. Only used if rosbag is true."/>

    <arg name="hull_finder" default="false"
         doc="Launches the realsense hull finder node when true."/>
    <arg name="point_finder" default="false"
         doc="Launches the realsense point finder node when true."/>
    <arg name="stone_finder" default="false"
         doc="Launches the stone finder node when true."/>
    <arg name="realsense_simulation" default="false"
         doc="Whether the simulation camera or the physical camera should be used"/>
    <arg name="realsense_test_data" default="$(eval hull_finder)" doc="Whether the node which can publish pointclouds
    from datasets should be started."/>

    <arg name="use_imu_data" default="$(eval ((hull_finder or point_finder or stone_finder) and not realsense_simulation))"
         doc="Whether the imu data will be used to"/>
    <arg name="ground_gait" default="$(arg use_imu_data)"
         doc="Exoskeleton will ground gait in gazebo_ui if true. When the imu data is used,
         this version of the urdf is also required, because we want the robot state publisher
         to publish the transform from world to baselink."/>
    <arg name="imu_to_use" default="back"
         doc="Which imu to use for determining exo orientation"/>
    <include file="$(find march_launch)/launch/realsense_camera.launch"
             if="$(eval (not realsense_simulation) and (hull_finder or point_finder or stone_finder))" pass_all_args="true"/>
    <arg name="realsense_debug" default="true" doc="Enables the debugging for the realsense_reader_node"/>
    <param name="realsense_debug" value="$(arg realsense_debug)"/>
    <arg name="data_collector" default="false" doc="Launches the data collector when true."/>
    <arg name="pressure_soles" default="false" doc="Whether a connection with pressure_soles should be established." />
    <arg name="moticon_ip" default="192.168.8.105" doc="The ip-adress with Moticon software running on it, defaults to
            EMS switch laptop on standard router"/>
    <arg name="use_sim_time" default="$(eval configuration == 'simulation')" doc="whether to use sim time"/>
    <param name="use_sim_time" value="$(arg use_sim_time)"/>

<!-- ROS1 Gait selection        -->
    <arg name="sounds" default="true" doc="Whether to use sounds."/>
    <arg name="gait_selection" default="false" doc="Whether to start the ros1 gait selection"/>
    <arg name="gait_directory" default="training-v" doc="Gait files directory to use"/>

<!-- Check arguments-->
     <!-- Throw error when starting the exo with the gait_directory only meant for simulation -->
    <group if="$(eval gait_directory == 'simulation_only-vi')">
        <group if="$(eval configuration == 'exoskeleton')">
            <node pkg="rostopic" type="rostopic" name="directory_check"
                  args="pub /march/error march_shared_msgs/Error '{header: {seq: 0, stamp: {secs: 0, nsecs: 0},  frame_id: &quot; &quot;},
                error_message: &quot;Gait directory should never be used for non-simulation purposes.&quot;,
                type: 0}'"
                  output="screen"/>
        </group>
    </group>

<!-- Hardware               -->
    <group if="$(eval configuration == 'exoskeleton')">
        <include file="$(find march_hardware_interface)/launch/hardware.launch" if="$(arg hardware_interface)">
            <arg name="robot" value="$(arg robot)"/>
            <arg name="robot_description" value="$(arg robot_description)"/>
            <arg name="controller_name" value="$(arg controller_name)"/>
            <arg name="controller_type" value="$(arg controller_type)"/>
            <arg name="if_name" value="$(arg if_name)"/>
            <arg name="remove_fixed_joints_from_ethercat_train"
                 value="$(arg remove_fixed_joints_from_ethercat_train)"/>
            <arg name="enable_safety_controller"
                 value="$(arg enable_safety_controller)"/>
            <arg name="jointless" value="$(arg jointless)"/>
        </include>
    </group>

    <include file="$(dirname)/serial_connection.launch">
        <arg name="arduino_master" value="$(arg arduino_master)"/>
        <arg name="input_device" value="$(arg input_device)"/>
        <arg name="wireless" value="$(arg wireless)"/>
    </include>

<!-- Data-->
    <node
            if="$(arg rosbag)"
            pkg="rosbag"
            name="record"
            type="record"
            output="log"
            args="-a -q -o $(arg bag_prefix) -x '(.*)camera_(front|back)(.*)'"
    />

    <rosparam file="$(find march_bridge_parameters)/config/topics_services_to_bridge.yaml"
              command="load"/>

    <group ns="march">
        <include file="$(find march_realsense_reader)/launch/realsense_reader.launch"
                 if="$(arg hull_finder)"/>
        
        <include file="$(find march_foot_position_finder)/launch/foot_position_finder.launch"
                 if="$(arg point_finder)"/>

        <include file="$(find march_stone_finder)/launch/march_stone_finder.launch"
                 if="$(arg stone_finder)"/>

        <include file="$(find march_realsense_test_publisher)/launch/realsense_test_publisher.launch"
                 if="$(arg realsense_test_data)"/>

        <include file="$(find march_data_collector)/launch/march_data_collector.launch" if="$(eval data_collector or balance)">
            <arg name="pressure_soles" value="$(arg pressure_soles)"/>
            <arg name="moticon_ip" value="$(arg moticon_ip)"/>
            <arg name="simulation" value="$(eval configuration == 'simulation')"/>
        </include>

    <include file="$(find march_gravity_aligned_frame_publisher)/launch/march_gravity_aligned_frame_publisher.launch"/>

<!-- Bridge -->
        <!-- To prevent unnecessary topics and messages, we disable the plugins that
         send a lot of compressed versions of the camera topics. -->
        <group if="$(eval point_finder or stone_finder)">
            <include file="$(find march_launch)/launch/disable_camera_plugins.launch">
                <arg name="camera_name" value="camera_front_left"/>
            </include>
            <include file="$(find march_launch)/launch/disable_camera_plugins.launch">
                <arg name="camera_name" value="camera_front_right"/>
            </include>
        </group>

        <group if="$(arg hull_finder)">
            <include file="$(find march_launch)/launch/disable_camera_plugins.launch">
                <arg name="camera_name" value="camera_front"/>
            </include>
            <include file="$(find march_launch)/launch/disable_camera_plugins.launch">
                <arg name="camera_name" value="camera_back"/>
            </include>
        </group>
       
        <include file="$(find march_gain_scheduling)/launch/march_gain_scheduling.launch" if="$(arg gain_scheduling)">
            <arg name="configuration" value="$(arg gain_tuning)"/>
            <arg name="robot" value="$(arg robot)"/>
        </include>

        <include if="$(arg balance)" file="$(find march_moveit)/launch/march_moveit.launch" />
        <include if="$(arg balance)"
                 file="$(find march_moveit_interface)/launch/moveit_interface.launch" />
        <node name="rviz" pkg="rviz" type="rviz" args="-d $(find march_launch)/rviz/default.rviz" if="$(eval not headless and rviz)"/>
    </group>

    <param name="robot_description"
           command="$(find xacro)/xacro '$(find march_description)/urdf/$(arg robot_description).xacro'
           ground_gait:=$(arg ground_gait) configuration:=$(arg configuration)
           realsense_simulation:=$(arg realsense_simulation) jointless:=$(arg jointless)"/>

    <param name="balance" value="$(arg balance)"/>


    <group if="$(eval configuration == 'simulation')">
        <include file="$(find march_simulation)/launch/march_world.launch">
            <arg name="gazebo_ui" value="$(eval not headless and gazebo_ui)"/>
            <arg name="fixed" value="$(arg fixed)"/>
            <arg name="ground_gait" value="$(arg ground_gait)"/>
            <arg name="obstacle" value="$(arg obstacle)"/>
            <arg name="robot" value="$(arg robot)"/>
            <arg name="robot_description" value="$(arg robot_description)"/>
            <arg name="controller_name" value="$(arg controller_name)"/>
            <arg name="controller_type" value="$(arg controller_type)"/>
            <arg name="realsense_simulation" value="$(arg realsense_simulation)"/>
            <arg name="use_sim_time" value="$(arg use_sim_time)"/>
            <arg name="jointless" value="$(arg jointless)"/>
        </include>
    </group>

</launch>
